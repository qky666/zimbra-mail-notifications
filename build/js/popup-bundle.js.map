{"version":3,"sources":["webpack:///webpack/bootstrap ab6a4597eb568e570d38?369f*","webpack:///./src/popup.js"],"names":["angular","module","controller","$scope","$window","$timeout","actualizarDatos","chrome","runtime","getBackgroundPage","backgroundPage","CoordinadorZimbra","getDatos","datos","actualizarUi","windowToScope","estado","window","hayMensajesOcultos","mensajesRaw","length","mensajes","map","Mensaje","i","necesitaRefresco","LogZimbra","log","JSON","stringify","hayOcultos","mensajesNoLeidos","ocultos","mensScopeIds","id","mensDatosIds","noOcultos","j","sonIguales","every","v","datosToJson","incluirTam","dtj","numMensajes","raw","innerWidth","innerHeight","name","location","reload","ui","newMailNotificationMessage","i18n","getMessage","toString","$apply","windowOnLoad","clickMensaje","onClickMensaje","mostrarOcultos","onMostrarOcultos","init","pageTitle","noMessage","cargandoMessage","btnShowHidden","ok","esRecarga","parse","onLoadBrowserAction"],"mappings":"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","file":"popup-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ab6a4597eb568e570d38\n **/","/**\n * Module associated with the extension's popup.\n */\nangular.module(\"zimbraNotificationsBA\", [])\n  .controller(\"MailCtrl\", function ($scope, $window, $timeout) {\n\n    \n    function actualizarDatos() {\n      chrome.runtime.getBackgroundPage (function(backgroundPage) {\n        backgroundPage.CoordinadorZimbra.getDatos(function(datos){\n          actualizarUi(datos)\n        })\n      })\n      \n    }\n    \n    \n    function windowToScope() {\n      $scope.estado = $scope.window.estado\n      $scope.datos = {}\n      $scope.datos.hayMensajesOcultos = $scope.window.hayMensajesOcultos\n      if ($scope.window.mensajesRaw.length) {\n        $scope.datos.mensajes = $scope.window.mensajesRaw.map(i=>new Mensaje(i))  \n      } else {\n        $scope.datos.mensajes = []\n      }   \n    }\n\n\n    // Comprueba si los 'datos' pasados coinciden con los que hay en $scope\n    function necesitaRefresco(datos) {\n      LogZimbra.log(\"Popup Defecto. Necesita Refresco. Inicio\")\n      LogZimbra.log(\"Popup Defecto. Necesita Refresco. datos=\" + JSON.stringify(datos))\n      LogZimbra.log(\"Popup Defecto. Necesita Refresco. $scope.datos=\" + JSON.stringify($scope.datos))\n      let hayOcultos = datos.mensajesNoLeidos.ocultos.length?true:false\n      if (hayOcultos != $scope.datos.hayMensajesOcultos) {\n        return true\n      }\n\n      let mensScopeIds = $scope.datos.mensajes.map(i=>i.id)\n      let mensDatosIds = datos.mensajesNoLeidos.noOcultos.map(j=>j.id)\n\n      let sonIguales = mensScopeIds.length==mensDatosIds.length && mensScopeIds.every((v,i)=> v == mensDatosIds[i])\n      \n      LogZimbra.log(\"Popup Defecto. Necesita Refresco. mensScopeIds=\"+ JSON.stringify(mensScopeIds))\n      LogZimbra.log(\"Popup Defecto. Necesita Refresco. mensDatosIds=\"+ JSON.stringify(mensDatosIds))\n      LogZimbra.log(\"Popup Defecto. Necesita Refresco. ¿Son iguales? \"+ sonIguales)\n\n      return !sonIguales\n    }\n\n\n    function datosToJson(datos, incluirTam = false) {\n      let dtj = {}\n      dtj.numMensajes = datos.mensajesNoLeidos.noOcultos.length\n      dtj.hayMensajesOcultos = datos.mensajesNoLeidos.ocultos.length?true:false\n\n      dtj.mensajesRaw = datos.mensajesNoLeidos.noOcultos.map(i=>i.raw)\n\n      dtj.estado = datos.estado\n\n      if (incluirTam) {\n        dtj.innerWidth = $window.innerWidth\n        dtj.innerHeight = $window.innerHeight  \n      }\n\n      return JSON.stringify(dtj)\n    }\n\n\n    function actualizarUi (datos) {    \n      \n      //Comprobamos si hay que refrescar por datos\n      if (necesitaRefresco(datos)) {\n        LogZimbra.log(\"Popup Defecto. SÍ necesitamos refrescar por datos\")\n        \n        // Código de depuración para evitar problemas de \"reload()\" infinitos...\n        // let c = $window.confirm(\"¿Recargar?\")\n        // if (!c) {\n        //   return\n        // }\n\n        $window.name=datosToJson(datos, false)\n\n        $window.location.reload()\n        return\n      }\n\n      LogZimbra.log(\"Popup Defecto. NO necesitamos refrescar\")\n\n      let hayOcultos = datos.mensajesNoLeidos.ocultos.length?true:false\n\n    \t$scope.estado = datos.estado\n    \t$scope.datos.mensajes = datos.mensajesNoLeidos.noOcultos\n    \t$scope.datos.hayMensajesOcultos = hayOcultos\n    \t$scope.ui.newMailNotificationMessage = chrome.i18n.getMessage(\n        \"new_mail_notification_message\", \n        datos.mensajesNoLeidos.noOcultos.length.toString()\n      )\n    \t$scope.$apply()\n\n\n    }\n\n\t\tfunction windowOnLoad () {\n    }\n\n    function clickMensaje () {\n    \tchrome.runtime.getBackgroundPage (function(backgroundPage) {\n    \t\tbackgroundPage.CoordinadorZimbra.onClickMensaje()\n    \t})\n    }\n\n    function mostrarOcultos () {\n    \tchrome.runtime.getBackgroundPage (function(backgroundPage) {\n\t\t\t\tbackgroundPage.CoordinadorZimbra.onMostrarOcultos(function () {} )\n\t\t\t})\t\n    }\n\n    /**\n     * Inicializamos el controlador\n     */\n    function init () {\n      LogZimbra.log(\"Popup Defecto. Init. Inicio\")\n      \n      // Inicializamos los valores dependientes del idioma\n      $scope.ui = {}\n      $scope.ui.pageTitle = chrome.i18n.getMessage(\"mail_page_title\")\n      $scope.ui.noMessage = chrome.i18n.getMessage(\"mail_no_message\")\n      $scope.ui.cargandoMessage = chrome.i18n.getMessage(\"mail_consultando_mensajes\")\n      $scope.ui.newMailNotificationMessage = null\n      $scope.ui.btnShowHidden = chrome.i18n.getMessage(\"ba_btn_show_hidden\")\n\n      // Inicializamos funciones que tienen que ver con la UI\n      $scope.ui.clickMensaje = clickMensaje\n      $scope.ui.mostrarOcultos = mostrarOcultos\n\n      // Inicializamos variables. \n      // Esto ya no hace falta porque se inicializa a partir de los valores de $scope.window\n      // $scope.datos = {}\n      // $scope.datos.mensajes = []\n      // $scope.datos.hayMensajesOcultos = false\n      // $scope.estado = {ok:true}\n\n      // Inicializamos window\n      $scope.window = {}\n      $scope.window.numMensajes = 0\n      $scope.window.mensajesRaw = []\n      $scope.window.hayMensajesOcultos = false\n      $scope.window.estado = {ok:true}\n      $scope.window.esRecarga = false\n\n      //\"publicamos\" la función para que se la pueda llamar desde el background\n      $window.actualizarDatos = actualizarDatos\n\n      // Todo esto sirve para que los datos se carguen de entrada (a partir de lo que hay en $window.name).\n      // Si no lo hacemos así, se cargaría a partir de los datos obtenidos del background, en un callback.\n      // Establecer los datos en un callback hace que Firefox se líe un poco con el tamaño de la ventana, \n      // así que lo hacemos así.\n      if ($window.name) {\n        LogZimbra.log(\"Popup Defecto. Init. Existe window.name=\"+$window.name)\n        $scope.window = JSON.parse($window.name)\n        $scope.window.esRecarga = true\n      } \n      windowToScope()\n      actualizarDatos()\n\n      if (!$scope.window.esRecarga) {\n        // Avisamos al background de que hemos cargado la página\n        LogZimbra.log(\"Popup Defecto. Init. Avisamos al background de que hemos cargado la página\")\n        chrome.runtime.getBackgroundPage (function(backgroundPage) {\n          backgroundPage.CoordinadorZimbra.onLoadBrowserAction(function () {})\n        })\n      }\n\n    }\n\n    init()  // Inicializamos el controlador\n\n  })\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/popup.js\n **/"],"sourceRoot":""}